<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>